<?xml version="1.0"?>
<!--
BSD 3-Clause License

Copyright (c) 2022, NMMI
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

1. Redistributions of source code must retain the above copyright notice, this
   list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright notice,
   this list of conditions and the following disclaimer in the documentation
   and/or other materials provided with the distribution.

3. Neither the name of the copyright holder nor the names of its
   contributors may be used to endorse or promote products derived from
   this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->

<robot xmlns:xacro="http://ros.org/wiki/xacro">

  <xacro:macro name="neck_head_macro" params="parent_link">

    <!-- <gazebo>
  <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
    <robotNamespace>${robot_namespace}</robotNamespace>
  </plugin>
</gazebo> -->
    <xacro:property name="camera_link" value="0.05" />
    <!-- Size of square 'camera' box -->


    <joint name="DJI_connect_joint" type="fixed">
      <parent link="${parent_link}"/>
      <child link="DJI_connect_link"/>
      <origin rpy="${pi+0.0873} 0 0" xyz="0 -74.58e-3 -85.85e-3"/>
    </joint>

    <link name="DJI_connect_link">
      <visual>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
          <mesh filename="package://aerial_ego_simulation/meshes/head/DJI_connect.stl" scale="0.001 0.001 0.001"/>
        </geometry>
      </visual>

      <collision>
        <origin xyz="0 79e-3 13.5e-3" rpy="0 0 0"/>
        <geometry>
          <box size="80e-3 158e-3 27e-3"/>
        </geometry>
      </collision>

      <inertial>
        <origin xyz="0 76.75e-3 13.5e-3" rpy="0 0 0"/>
        <mass value="0.05"/>
        <inertia ixx="${0.05/12*(162.5e-3*162.5e-3+27e-3*27e-3)}" ixy="0.0" ixz="0.0" iyy="${0.05/12*(27e-3*27e-3+80e-3*80e-3)}" iyz="0.0" izz="${0.05/12*(162.5e-3*162.5e-3+80e-3*80e-3)}"/>
      </inertial>
    </link>

    <joint name="neck_base_joint" type="fixed">
      <parent link="DJI_connect_link"/>
      <child link="neck_base_link"/>
      <origin rpy="0 0 0" xyz="0 117e-3 27e-3"/>
    </joint>

    <link name="neck_base_link">
      <visual>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
          <mesh filename="package://aerial_ego_simulation/meshes/head/neck_base.stl" scale="0.001 0.001 0.001"/>
        </geometry>
      </visual>

      <collision>
        <origin xyz="0 0 40e-3" rpy="0 0 0"/>
        <geometry>
          <box size="80e-3 80e-3 80e-3"/>
        </geometry>
      </collision>

      <inertial>
        <origin xyz="-1.6749134e-05 1.3880927e-3 3.2904335e-2" rpy="-0.3776 -0.0858 1.5403"/>
        <mass value="0.454"/>
        <inertia ixx="1.6874028e-4" ixy="0.0" ixz="0.0" iyy="1.7773673e-4" iyz="0.0" izz="1.8020647e-4"/>
      </inertial>
    </link>

    <joint name="neck_joint_1" type="revolute">
      <axis xyz="0 1 0"/>
      <limit effort="1000.0" lower="${-pi}" upper="${pi}" velocity="1"/>
      <parent link="neck_base_link"/>
      <child link="neck_link_1"/>
      <origin rpy="0 0 0" xyz="0 45.5e-3 34e-3"/>
      <dynamics damping="1e-5" friction="1e-5"/>
    </joint>

    <link name="neck_link_1">
      <visual>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
          <mesh filename="package://aerial_ego_simulation/meshes/head/neck_link1.stl" scale="0.001 0.001 0.001"/>
        </geometry>
      </visual>

      <collision>
        <origin xyz="0 -2.75e-3 0" rpy="0 0 0"/>
        <geometry>
          <box size="80e-3 5.5e-3 80e-3"/>
        </geometry>
      </collision>

      <inertial>
        <origin xyz="7.3157519e-3 2.6015782e-2 0" rpy="0 0 0.5020"/>
        <mass value="0.0866"/>
        <inertia ixx="6.8361134e-5" ixy="0.0" ixz="0.0" iyy="1.1299140e-4" iyz="0.0" izz="1.3810438e-4"/>
      </inertial>
    </link>

    <joint name="neck_joint_2" type="revolute">
      <axis xyz="1 0 0"/>
      <limit effort="1000.0" lower="${-pi/2}" upper="${pi/2}" velocity="1"/>
      <parent link="neck_link_1"/>
      <child link="head_link"/>
      <origin rpy="0 0 0" xyz="0 56e-3 0"/>
      <dynamics damping="1e-5" friction="1e-5"/>
    </joint>

    <link name="head_link">
      <visual>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
          <mesh filename="package://aerial_ego_simulation/meshes/head/head_link.stl" scale="0.001 0.001 0.001"/>
        </geometry>
      </visual>

      <collision>
        <origin xyz="0 40e-3 0" rpy="0 0 0"/>
        <geometry>
          <sphere radius="60e-3"/>
        </geometry>
      </collision>

      <inertial>
        <origin xyz="1.6724729e-04 2.5974293e-2 1.6809604e-2" rpy="1.5708 -0.0334 0"/>
        <mass value="0.95"/>
        <inertia ixx="1.4514462e-3" ixy="0.0" ixz="0.0" iyy="2.0518578e-3" iyz="0.0" izz="2.1893905e-3"/>
      </inertial>
    </link>

    <joint name="eye_joint" type="fixed">
      <axis xyz="0 1 0" />
      <parent link="head_link"/>
      <child link="left_camera_frame"/>
      <origin rpy="${-pi/2} ${-pi/2} 0" xyz="31e-3 46.83e-3 81.95e-3"/>
    </joint>

    <!-- Camera -->
    <link name="left_camera_frame">
      <collision>
        <origin xyz="-15.25e-3 -31e-3 0 " rpy="0 0 0"/>
        <geometry>
          <box size="30.5e-3 124.5e-3 26.5e-3 "/>
        </geometry>
      </collision>

      <visual>
        <origin rpy="${pi/2} 0 ${pi/2}" xyz="0 -31e-3 0"/>
        <geometry>
          <mesh filename="package://aerial_ego_simulation/meshes/head/camera.stl" scale="0.001 0.001 0.001"/>
        </geometry>
        <!-- <origin xyz=" -15.25e-3 -31e-3 0" rpy="0 0 0"/>
      <geometry>
	      <box size="30.5e-3 124.5e-3 26.5e-3"/>
      </geometry> -->
      </visual>

      <inertial>
        <mass value="1e-5" />
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
      </inertial>
    </link>

    <!-- generate an optical frame http://www.ros.org/reps/rep-0103.html#suffix-frames
      so that ros and opencv can operate on the camera frame correctly -->
    <joint name="camera_optical_joint" type="fixed">
      <!-- these values have to be these values otherwise the gazebo camera image
        won't be aligned properly with the frame it is supposedly originating from -->
      <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}"/>
      <parent link="left_camera_frame"/>
      <child link="left_camera_optical_frame"/>
    </joint>

    <link name="left_camera_optical_frame">
    </link>


    <gazebo reference="left_camera_frame">
      <sensor type="multicamera" name="stereo_camera">
        <update_rate>30.0</update_rate>
        <camera name="left">
          <horizontal_fov>1.3962634</horizontal_fov>
          <image>
            <width>1280</width>
            <height>720</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>300</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <camera name="right">
          <pose>0 -0.070 0 0 0 0</pose>
          <horizontal_fov>1.3962634</horizontal_fov>
          <image>
            <width>1280</width>
            <height>720</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>300</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <plugin name="stereo_camera_controller" filename="libgazebo_ros_multicamera.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>0.0</updateRate>
          <cameraName>camera</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <frameName>left_camera_optical_frame</frameName>
          <!--<rightFrameName>right_camera_optical_frame</rightFrameName>-->
          <hackBaseline>0.07</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
        </plugin>
      </sensor>
    </gazebo>

    <transmission name="tran_neck1">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="neck_joint_1">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      </joint>
      <actuator name="motor_neck1">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission>

    <transmission name="tran_neck2">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="neck_joint_2">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      </joint>
      <actuator name="motor_neck2">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission>

  </xacro:macro>

</robot>