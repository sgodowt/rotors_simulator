<launch>
  <arg name="namespace" default="head_test"/>
  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find rotors_gazebo)/worlds/basic.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="verbose" value="true" />
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description" command="
    $(find xacro)/xacro '$(find rotors_description)/urdf/neck_head_test.xacro'"
  />
	<rosparam command="load" file="$(find rotors_gazebo)/test_params.yaml"/>

 <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="spawn_$(arg namespace)" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf 
    -model $(arg namespace) 
    -param robot_description"/>
  
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="use_gui" value="TRUE"/>
  </node>

  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
    output="screen" ns="/head_test" args="
    joint_position_controller_neck_1
    joint_position_controller_neck_2


    joint_state_controller"/>

  <node name="arm_rqt" pkg="rqt_gui" type="rqt_gui" respawn="false"
	output="screen" args="--perspective-file $(find rotors_gazebo)/arm_rqt.perspective"/>


  <!-- Combine joint values -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>

  <!-- Show in Rviz   -->
  <node name="rviz" pkg="rviz" type="rviz"/>

 
</launch>
